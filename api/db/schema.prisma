datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
  previewFeatures = ["interactiveTransactions"]
}

model User {
  id             String @id @default(uuid())
  email          String @unique
  createdAt      DateTime @default(now())
  hashedPassword String?
  salt           String?
  resetToken          String?
  resetTokenExpiresAt DateTime?
  roles          String[]
  streams        ActivityStream[]
  posts          Post[]
  files          File[]
  streamposts    StreamPost[]
}

model ActivityStream {
  id             String @id @default(uuid())
  createdAt      DateTime @default(now())
  title          String
  owner          User     @relation(fields: [owner_id], references: [id])
  owner_id       String
  streamposts    StreamPost[]
}

model Post {
  id             String @id @default(uuid())
  createdAt      DateTime @default(now())
  title          String
  body           String
  owner          User     @relation(fields: [owner_id], references: [id])
  owner_id       String
  streamposts    StreamPost[]
}

model StreamPost {
  id             String @id @default(uuid())
  createdAt      DateTime @default(now())

  poster         User     @relation(fields: [poster_id], references: [id])
  poster_id      String

  stream         ActivityStream @relation(fields: [stream_id], references: [id])
  stream_id      String

  post           Post @relation(fields: [post_id], references: [id])
  post_id        String
}

model File {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  storage   String
  path      String?
  title     String?
  extension String?

  publicAllowed    Boolean?
  publicURL        String?
  signedAccessURL  String?
  signedAccessURLExpires DateTime?

  owner     User     @relation(fields: [owner_id], references: [id])
  owner_id  String   @default("")

  @@unique([storage, path], name: "unique_file")
}
